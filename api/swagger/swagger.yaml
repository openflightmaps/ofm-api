swagger: '2.0'
basePath: /0.1
info:
  description: >+
    Open flightmap data api.

    Note: Every element and changeset may have any number of tags. A tag is
    a Key-Value pair of Unicode strings of up to 255 full unicode characters (not
    bytes) each.

  title: openflightmaps
  version: '0.0.1'
consumes:
  - application/json
produces:
  - application/json
security:
  - BasicAuth: []
paths:
  /swagger.json:
    x-swagger-pipe: swagger_raw
  /info/regions:
    get:
      x-swagger-router-controller: Information
      operationId: getRegions
      description: 'Returns a list of available airspace regions / FIRs'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response'
      summary: List all Regions
      tags: ["Information"]   
  /info/userinfo:
    get:
      x-swagger-router-controller: Information
      operationId: getUserInfo
      description: 'Returns info about the currently logged in user'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response'
      summary: Show user information
      tags: ["Information"]
  /changeset/{db}/_create:
    put:
      x-swagger-router-controller: Changeset
      operationId: createChangeset
      description: ''
      parameters:
        - description: Database name (e.g. oad)
          name: db
          required: true
          in: path
          type: string
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
      summary: Create new changeset
      tags: ["NotImplementedYet"]
  /changeset/{db}/{id}:
    get:
      x-swagger-router-controller: Changeset
      operationId: getChangeset
      description: ''
      parameters:
        - description: Database name (e.g. oad)
          name: db
          required: true
          in: path
          type: string
        - description: Unique changeset identifier
          in: path
          name: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          examples: {}
          schema:
            $ref: '#/definitions/Response'
          headers: {}
      summary: Download all changes associated with this changeset
      tags: ["NotImplementedYet"]
  /changeset/{db}/{id}/_close:
    put:
      x-swagger-router-controller: Changeset
      operationId: closeChangeset
      description: ''
      parameters:
        - description: Database name (e.g. oad)
          name: db
          required: true
          in: path
          type: string
        - description: Unique changeset identifier
          in: path
          name: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
      summary: Close changeset
      tags: ["NotImplementedYet"]
  /changeset/{db}/{id}/_expand_bbox:
    post:
      x-swagger-router-controller: Changeset
      operationId: expandChangesetBbox
      description: ''
      parameters:
        - description: Database name (e.g. oad)
          name: db
          required: true
          in: path
          type: string
        - description: Unique changeset identifier
          in: path
          name: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          examples: {}
          schema:
            $ref: '#/definitions/Response'
          headers: {}
      summary: Expand bounding box of change
      tags: ["NotImplementedYet"]
  /node/{db}/_create:
    put:
      x-swagger-router-controller: Node
      operationId: createNode
      description: ''
      parameters:
        - description: Database name (e.g. oad)
          name: db
          required: true
          in: path
          type: string
        - description: Node definition
          name: body
          required: true
          in: body
          schema:
            $ref: '#/definitions/Node'
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
      summary: Create new node
      tags: ["Nodes"]
  /node/{db}/_search:
    post:
      x-swagger-router-controller: Node
      operationId: searchNode
      description: |
        Search for objects in openflightmaps database.
      parameters:
        - description: Database name (e.g. "OAD Pending Changes")
          name: db
          required: true
          in: path
          type: string
        - description: "Query with name value pairs. e.g. {region: 'LSAS', type: 'Ase/Abd'"
          in: body
          name: query
          required: true
          schema:
            $ref: '#/definitions/NodeQuery'
        - description: return deleted nodes
          in: query
          name: deleted
          default: false
          required: false
          type: boolean
        - description: bounding box (left,bottom,right,top)
          in: query
          name: bbox
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response'
      summary: Search
      tags: ["Nodes"]
  /node/{db}/_multi:
    get:
      x-swagger-router-controller: Node
      operationId: getMultipleNodes
      description: ''
      parameters:
        - description: Database name (e.g. oad)
          name: db
          required: true
          in: path
          type: string
        - description: Unique node identifiers
          in: query
          name: nodes
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response'
          headers: {}
      summary: Get multiple node data
      tags: ["Nodes"]
  /node/{db}/{id}:
    delete:
      x-swagger-router-controller: Node
      operationId: deleteNode
      parameters:
        - description: Database name (e.g. oad)
          name: db
          required: true
          in: path
          type: string
        - description: Unique node identifier
          in: path
          name: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
        '404':
          description: Node not found
      summary: Delete
      tags: ["Nodes"]
    get:
      x-swagger-router-controller: Node
      operationId: getNode
      description: ''
      parameters:
        - description: Database name (e.g. oad)
          name: db
          required: true
          in: path
          type: string
        - description: Unique node identifier
          in: path
          name: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response'
          headers: {}
      summary: Get node data
      tags: ["Nodes"]
    put:
      x-swagger-router-controller: Node
      operationId: updateNode
      description: ''
      parameters:
        - description: Database name (e.g. oad)
          name: db
          required: true
          in: path
          type: string
        - description: Unique changeset identifier
          in: path
          name: id
          required: true
          type: integer
          format: int64
        - description: Node definition
          name: body
          required: true
          in: body
          schema:
            $ref: '#/definitions/Node'
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
      summary: Replace node with new node
      tags: ["Nodes"]
    patch:
      x-swagger-router-controller: Node
      operationId: patchNode
      description: ''
      parameters:
        - description: Database name (e.g. oad)
          name: db
          required: true
          in: path
          type: string
        - description: Unique changeset identifier
          in: path
          name: id
          required: true
          type: integer
          format: int64
        - description: Node definition
          name: body
          required: true
          in: body
          schema:
            $ref: '#/definitions/Node'
      responses:
        '200':
          description: OK
          examples: {}
          schema:
            $ref: '#/definitions/Response'
          headers: {}
      summary: Partially update fields of a node
      tags: ["Nodes"]
  /node/{db}/{id}/_history:
    get:
      x-swagger-router-controller: Node
      operationId: getNodeHistory
      parameters:
        - description: Database name (e.g. oad)
          name: db
          required: true
          in: path
          type: string
        - description: Unique node identifier
          in: path
          name: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          examples: {}
          schema:
            $ref: '#/definitions/Response'
          headers: {}
      summary: Get node history
      tags: ["Nodes", "NotImplementedYet"]
  /node/{db}/{id}/{revision}:
    get:
      x-swagger-router-controller: Node
      operationId: getNodebyRevision
      parameters:
        - description: Database name (e.g. oad)
          name: db
          required: true
          in: path
          type: string
        - description: Unique node identifier
          in: path
          name: id
          required: true
          type: integer
          format: int64
        - description: Node revision
          in: path
          name: revision
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          examples: {}
          schema:
            $ref: '#/definitions/Response'
          headers: {}
      summary: Get specific revision of node
      tags: ["Nodes", "NotImplementedYet"]
  /nativeclient/org/{id}:
    delete:
      x-swagger-router-controller: NativeClient
      operationId: deleteOrgNode
      parameters:
        - description: Unique identifier
          in: path
          name: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          examples: {}
          schema:
            $ref: '#/definitions/Response'
          headers: {}
        '404':
          description: Node not found
      summary: Delete
      tags: ["NativeClient"]
    get:
      x-swagger-router-controller: NativeClient
      operationId: getOrgNode
      description: ''
      parameters:
        - description: Unique identifier
          in: path
          name: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response'
      summary: Get node data
      tags: ["NativeClient"]
    put:
      x-swagger-router-controller: NativeClient
      operationId: updateOrgNode
      description: ''
      parameters:
        - description: Unique identifier
          in: path
          name: id
          required: true
          type: integer
          format: int64
        - description: Node definition
          name: body
          required: true
          in: body
          schema:
            $ref: '#/definitions/Node'
      responses:
        '200':
          description: OK
      summary: Replace node
      tags: ["NativeClient"]
  /nativeclient/org/_create:
    put:
      x-swagger-router-controller: NativeClient
      operationId: createOrgNode
      description: ''
      parameters:
        - description: Node definition
          name: body
          required: true
          in: body
          schema:
            $ref: '#/definitions/Node'
      responses:
        '200':
          description: OK
      summary: Create new organisation
      tags: ["NativeClient"]
  /nativeclient/org/_search:
    post:
      x-swagger-router-controller: NativeClient
      operationId: searchOrgNode
      description: |
        Return all org objects in database.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response'
      summary: Search
      tags: ["NativeClient"]
  /nativeclient/user/{id}:
    delete:
      x-swagger-router-controller: NativeClient
      operationId: deleteUserNode
      parameters:
        - description: Unique identifier
          in: path
          name: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response'
          headers: {}
        '404':
          description: Node not found
      summary: Delete
      tags: ["NativeClient"]
    get:
      x-swagger-router-controller: NativeClient
      operationId: getUserNode
      description: ''
      parameters:
        - description: Unique identifier
          in: path
          name: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response'
      summary: Get node data
      tags: ["NativeClient"]
    put:
      x-swagger-router-controller: NativeClient
      operationId: updateUserNode
      description: ''
      parameters:
        - description: Unique identifier
          in: path
          name: id
          required: true
          type: integer
          format: int64
        - description: Node definition
          name: body
          required: true
          in: body
          schema:
            $ref: '#/definitions/Node'
      responses:
        '200':
          description: OK
      summary: Replace node
      tags: ["NativeClient"]
  /nativeclient/user/_create:
    put:
      x-swagger-router-controller: NativeClient
      operationId: createUserNode
      description: ''
      parameters:
        - description: Node definition
          name: body
          required: true
          in: body
          schema:
            $ref: '#/definitions/Node'
      responses:
        '200':
          description: OK
      summary: Create new organisation
      tags: ["NativeClient"]
  /nativeclient/user/_search:
    post:
      x-swagger-router-controller: NativeClient
      operationId: searchUserNode
      description: |
        Return all org objects in database.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response'
      summary: Search
      tags: ["NativeClient"]
  /nativeclient/permissions/{id}:
    get:
      x-swagger-router-controller: NativeClient
      operationId: getUserPermissionNode
      description: ''
      parameters:
        - description: Unique identifier
          in: path
          name: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response'
      summary: Get user permissions
      tags: ["NativeClient"]
  /blobstore/{id}:
    get:
      x-swagger-router-controller: BlobStore
      operationId: getBlob
      description: ''
      produces:
        - application/octet-stream
      parameters:
        - description: Unique blob identifier
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          headers: {}
      summary: Get Blob
      tags: ["NativeClient"]
  /blobstore/_create:
    put:
      x-swagger-router-controller: BlobStore
      operationId: createBlob
      description: ''
      consumes:
        - application/octet-stream
      parameters:
        - description: Binary data
          name: body
          required: true
          in: body
          schema:
            type: string
            format: byte
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response'
      summary: Create new blob
      tags: ["NativeClient"]
definitions:
  NodeList:
    type: object
    allOf:
      - $ref: '#/definitions/ResponseData'
      - type: object
    required:
      - items
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/Node'
  Node:
    type: object
    allOf:
      - $ref: '#/definitions/ResponseData'
      - type: object
    properties:
      fields:
        type: string
      id:
        type: integer
        format: int64
      revision:
        type: integer
        format: int64
      deleted:
        type: boolean
      updated:
        type: string
        format: datetime
      userId:
        type: integer
      tags:
        type: object
        items:
          $ref: '#/definitions/Tags'
    required:
      - kind
      - id
      - revision
  Tags:
    additionalProperties:
      type: string
    example:
      - fir: '5'
      - name: LSMP 5 TMA
      - type: Ase/Abd
  RegionList:
    type: object
    allOf:
      - $ref: '#/definitions/ResponseData'
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/Region'
  Region:
    type: object
    properties:
      id:
        type: string
      id_internal:
        type: string
      name:
        type: string
    example:
      name: Wien
      id: LOVV
      id_internal: 0
  NodeQuery:
    type: object
    additionalProperties:
      type: string
    example: {"Flight Information Region": "5", "Type": "Ase/Abd"}
  ResponseData:
    type: object
    discriminator: kind
    required:
      - kind
    properties:
      kind:
        type: string
  Response:
    type: object
    properties:
      apiVersion:
        type: string
      id:
        type: string
      data:
        $ref: '#/definitions/ResponseData'
  NodeNumberList:
    type: object
    allOf:
      - $ref: '#/definitions/ResponseData'
    required:
      - nodelist
    properties:
      nodelist:
        type: array
        items:
          type: integer
  User:
    type: object
    allOf:
      - $ref: '#/definitions/ResponseData'
    required:
      - id
      - tags
    properties:
      id:
        type: integer
      tags:
        type: object
        items:
          $ref: '#/definitions/Tags'
      permissions:
        type: object
        items:
          $ref: '#/definitions/Tags'
      organizations:
        type: array
        items:
          type: integer
  Organization:
    type: object
    allOf:
      - $ref: '#/definitions/ResponseData'
    required:
      - id
      - tags
    properties:
      id:
        type: integer
      tags:
        type: object
        items:
          $ref: '#/definitions/Tags'
      permissions:
        type: object
        items:
          $ref: '#/definitions/Tags'
securityDefinitions:
  BasicAuth:
    type: basic
